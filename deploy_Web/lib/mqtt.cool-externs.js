ConnectOptions = function() {};
Globals = {};
LightstreamerClient = {};
Message = function() {};
MqttClient = function() {};
MQTTCoolListener = function() {};
MQTTCoolSession = function() {};
MqttStorage = function() {};
OnConnectionFailure = function() {};
OnConnectionLost = function() {};
OnConnectionNotAuthorized = function() {};
OnConnectionSuccess = function() {};
OnMessageArrived = function() {};
OnMessageDelivered = function() {};
OnMessageNotAuthorized = function() {};
OnReconnectionComplete = function() {};
OnReconnectionStart = function() {};
OnSubscriptionFailure = function() {};
OnSubscriptionNotAuthorized = function() {};
OnSubscriptionSuccess = function() {};
OnUnsubscribeFailure = function() {};
OnUnsubscribeSuccess = function() {};
openSession = function() {};
SubscribeOptions = function() {};
UnsubscribeOptions = function() {};
MQTTCoolListener.prototype.onConnectionFailure = function() {};
MQTTCoolListener.prototype.onConnectionSuccess = function() {};
MQTTCoolListener.prototype.onLsClient = function() {};
MQTTCoolSession.prototype.close = function() {};
MQTTCoolSession.prototype.createClient = function() {};
Message.prototype.destinationName = function() {};
Message.prototype.duplicate = function() {};
Message.prototype.payloadBytes = function() {};
Message.prototype.payloadString = function() {};
Message.prototype.qos = function() {};
Message.prototype.retained = function() {};
MqttClient.prototype.connect = function() {};
MqttClient.prototype.disconnect = function() {};
MqttClient.prototype.onConnectionLost = function() {};
MqttClient.prototype.onMessageArrived = function() {};
MqttClient.prototype.onMessageDelivered = function() {};
MqttClient.prototype.onMessageNotAuthorized = function() {};
MqttClient.prototype.onReconnectionComplete = function() {};
MqttClient.prototype.onReconnectionStart = function() {};
MqttClient.prototype.send = function() {};
MqttClient.prototype.subscribe = function() {};
MqttClient.prototype.unsubscribe = function() {};
MqttStorage.prototype.get = function() {};
MqttStorage.prototype.keys = function() {};
MqttStorage.prototype.remove = function() {};
MqttStorage.prototype.set = function() {};
